# Polynomial Regression

# Importing the libraries
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np


# Importing the dataset
dataset = pd.read_csv("kaggle-dataset-10.csv")
X = dataset.iloc[:, [2]].values
y = dataset.iloc[:, [5]].values

# Plotting points as a scatter plot 
x = df["Upvotes"] 
y = df["followers"] 
plt.scatter(x, y, label= "stars", color= "m",  
            marker= "*", s=30) 
# x-axis label 
plt.xlabel('Upvotes') 
# frequency label 
plt.ylabel('followers') 
# function to show the plot 
plt.show()

# Splitting the dataset into the Training set and Test set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.9, random_state = 0)



# Fitting Simple Linear Regression to the Training set
from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

# Predicting the Test set results
y_pred = regressor.predict(X_test)

# Visualising the Training set results
plt.scatter(X_test, y_test, color = 'red', marker= "*")
plt.plot(X_test, regressor.predict(X_test), color = 'blue')
plt.title('Quora DATA Analysis')
plt.xlabel('Upvotes')
plt.ylabel('Followers')
plt.show()

count=0
for i in range (len(y_test)):
    if(abs(y_test[i]-y_pred[i])<200):
        count=count+1
print("Number of cases following the theory that more followers will result in more upvotes to your answers is: ")
print((count/900)*100,"%")
